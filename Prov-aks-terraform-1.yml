trigger:
  branches:
    include:
      - main

stages:
- stage: Terraform
  jobs:
  - job: ProvisionInfra
    pool:
      vmImage: ubuntu-latest

    steps:

    # âœ… Step 1: Hello
    - task: CmdLine@2
      displayName: 'Hello Message'
      inputs:
        script: echo "ðŸš€ Starting Terraform Pipeline"

    # âœ… Step 2: Install Terraform
    - script: |
        curl -L -o terraform.zip https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
        unzip terraform.zip
        sudo mv terraform /usr/local/bin/
        chmod +x /usr/local/bin/terraform
        terraform version
      displayName: 'Install Terraform 1.5.7'

    # âœ… Step 3: Install Azure CLI (safe for Microsoft-hosted agents)
    - script: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        az version
      displayName: 'Install Azure CLI'

    # âœ… Step 4: Log in to Azure using SP
    - script: |
        az login --service-principal \
          -u "$(client_id)" \
          -p "$(client_secret)" \
          --tenant d5d40ca8-b5aa-4d8f-8272-407b515cb5a7
      displayName: 'Azure Login with SP'
      env:
        client_id: $(client_id)
        client_secret: $(client_secret)

    # âœ… Step 5: Create Backend Resources (RG, Storage Account, Container)
    - script: |
        az group create \
          --name rg-akas-terraform-01 \
          --location eastus

        az storage account create \
          --name staksterraform001 \
          --resource-group rg-akas-terraform-01 \
          --location eastus \
          --sku Standard_LRS \
          --encryption-services blob

        az storage container create \
          --name container1 \
          --account-name staksterraform001
      displayName: 'Create Backend (RG + SA + Container)'

    # âœ… Step 6: Download SSH Key
    - task: DownloadSecureFile@1
      name: publickey
      inputs:
        secureFile: 'azure_rsa.pub'

    # âœ… Step 7: Terraform Init
    - script: |
        cd $(System.DefaultWorkingDirectory)

        terraform init \
          -backend-config="resource_group_name=rg-akas-terraform-01" \
          -backend-config="storage_account_name=staksterraform001" \
          -backend-config="container_name=container1" \
          -backend-config="key=kubernetes-dev.tfstate" \
          -backend-config="subscription_id=ee319277-edaa-4c07-9b91-04d1eb7bf895" \
          -backend-config="tenant_id=d5d40ca8-b5aa-4d8f-8272-407b515cb5a7"
      displayName: 'Terraform Init'
      env:
        ARM_CLIENT_ID: $(client_id)
        ARM_CLIENT_SECRET: $(client_secret)
        ARM_SUBSCRIPTION_ID: ee319277-edaa-4c07-9b91-04d1eb7bf895
        ARM_TENANT_ID: d5d40ca8-b5aa-4d8f-8272-407b515cb5a7

    # âœ… Step 8: Terraform Apply
    - script: |
        cd $(System.DefaultWorkingDirectory)

        terraform apply -auto-approve \
          -var="client_id=$(client_id)" \
          -var="client_secret=$(client_secret)" \
          -var="ssh_public_key=$(publickey.secureFilePath)"
      displayName: 'Terraform Apply'
      env:
        ARM_CLIENT_ID: $(client_id)
        ARM_CLIENT_SECRET: $(client_secret)
        ARM_SUBSCRIPTION_ID: ee319277-edaa-4c07-9b91-04d1eb7bf895
        ARM_TENANT_ID: d5d40ca8-b5aa-4d8f-8272-407b515cb5a7
